# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    avoid_print: true # Uncomment to disable the `avoid_print` rule
    avoid_unnecessary_containers: true
    avoid_web_libraries_in_flutter: true
    always_declare_return_types: true
    prefer_single_quotes: true # Uncomment to enable the `prefer_single_quotes` rule
    no_logic_in_create_state: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    sized_box_for_whitespace: true
    use_full_hex_values_for_flutter_colors: true
    use_key_in_widget_constructors: true
    require_trailing_commas: true
    sized_box_shrink_expand: true
    sort_child_properties_last: true
    unnecessary_final: true
    unnecessary_getters_setters: true
    unnecessary_late: true
    use_rethrow_when_possible: true
    avoid_empty_else: true
    avoid_returning_null_for_future: true
    avoid_slow_async_io: true
    avoid_types_as_parameter_names: true
    always_put_required_named_parameters_first: true
    avoid_function_literals_in_foreach_calls: true
    avoid_null_checks_in_equality_operators: true
    avoid_returning_null: true
    avoid_returning_null_for_void: true
    avoid_single_cascade_in_expression_statements: true
    avoid_types_on_closure_parameters: true
    hash_and_equals: true
    empty_statements: true
    valid_regexps: true
    camel_case_extensions: true
    camel_case_types: true
    constant_identifier_names: true
    empty_catches: true
    empty_constructor_bodies: true
    lines_longer_than_80_chars: true
    prefer_conditional_assignment: true
    prefer_contains: true
    prefer_final_fields: true
    prefer_spread_collections: true
    use_colored_box: true
    use_build_context_synchronously: false
analyzer:
  language:
    strict-inference: true
  errors:
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: error
    # treat missing returns as a warning (not a hint)
    missing_return: error
    # allow having TODOs in the code
    todo: ignore
  exclude:
    - lib/**/*.g.dart
# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 12
    maximum-nesting-level: 5
    number-of-parameters: 4
    source-lines-of-code: 50
  metrics-exclude:
    - test/**
  rules:
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    - prefer-trailing-comma
    - prefer-conditional-expressions
    - no-equal-then-else
